# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/author-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: powerplatform-cli-hello
version: 0.3.0
description: "This CNAB bundle uses the https://github.com/squillace/porter-pac mixin to create an admin profile and create an environment in PowerApps."
# TODO: update the registry to your own, e.g. myregistry
registry: ghcr.io/squillace

# If you want to customize the Dockerfile in use, uncomment the line below and update the referenced file. 
# See https://porter.sh/custom-dockerfile/
#dockerfile: Dockerfile.tmpl

mixins:
  - exec
  - pac:
    # The clientVersion value is required; this bundle mixin does not support "latest".
     clientVersion: "1.8.6"

install:
  - exec:
      description: "Setting random string...."
      command: ./helpers.sh
      arguments:
        - random-string
      outputs:
        - name: random_string
          regex: "(^[^\n]*$*)"
  - pac:
      description: "Attaching to the tenant...."
      arguments:
        - auth
        - create 
      flags:
        name: powerapp-tenant-admin 
        kind: Admin 
        applicationId: "{{bundle.credentials.POWER_CLIENT_ID}}"
        clientSecret: "{{bundle.credentials.POWER_CLIENT_PASSWORD}}" 
        tenant: "{{bundle.credentials.POWER_TENANT_ID}}"
  - pac:
      description: "Creating a new environment for the application...."
      arguments:
        - admin
        - create
      flags:
        name: "{{bundle.parameters.powerapp_env_name}}{{bundle.outputs.random_string}}"
        domain: "{{bundle.parameters.powerapp_env_name}}{{bundle.outputs.random_string}}"
        type: "{{bundle.parameters.environment_type}}"
      outputs:
        - name: env_id_string
          regex: "(([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})+)"
  - exec:
      command: output.sh
      description: "Capturing the environment id..."
      arguments:
        - "{{bundle.outputs.env_id_string}}"
      outputs:
        - name: env_id
          regex: "(.*)"
  - pac:
      description: "Attaching to the specific environment to import the solution...."
      arguments:
        - auth
        - create 
      flags:
        name: powerapp-environment-ops
        url: "https://{{bundle.parameters.powerapp_env_name}}{{bundle.outputs.random_string}}.crm.dynamics.com"
        applicationId: "{{bundle.credentials.POWER_CLIENT_ID}}"
        clientSecret: "{{bundle.credentials.POWER_CLIENT_PASSWORD}}" 
        tenant: "{{bundle.credentials.POWER_TENANT_ID}}"
  - pac:
      description: "Importing the application...."
      arguments:
        - solution
        - import
      flags:
        path: "./mytestsoln.zip"
# additional work goes here.

upgrade:
  - exec:
      description: "World 2.0"
      command: ./helpers.sh
      arguments:
        - upgrade

uninstall:
  - pac:
      description: "Logging into Power Apps as admin...."
      arguments:
        - auth
        - create 
      flags:
        name: uninstalling-powerapps 
        kind: Admin 
        applicationId: "{{bundle.credentials.POWER_CLIENT_ID}}"
        clientSecret: "{{bundle.credentials.POWER_CLIENT_PASSWORD}}" 
        tenant: "{{bundle.credentials.POWER_TENANT_ID}}"
  - pac: 
      description: "deleting the environment...."
      arguments:
        - admin
        - delete
      flags: 
        environment-id: "{{bundle.parameters.pac_env_id_to_delete}}"


  
          
# Below is an example of how to define credentials
# See https://porter.sh/author-bundles/#credentials
credentials:
# Power Platform Credentials
  - name: POWER_TENANT_ID
    description: "The Azure tenant identifier."
    env: POWER_TENANT_ID
  - name: POWER_CLIENT_ID
    description: "The Azure Client identifier, also called the App ID."
    env: POWER_CLIENT_ID
  - name: POWER_CLIENT_PASSWORD
    description: "The Azure client password or secret."
    env: POWER_CLIENT_PASSWORD

# Below is an example of how to define parameters
# See https://porter.sh/author-bundles/#parameters
parameters:
  - name: powerapp_env_name
    type: string
    description: "The name of the power app environment you will create."
    default: powerenv
  - name: pac_env_id_to_delete
    description: "the environment id to delete the environment on uninstall...."
    type: string
    applyTo:
      - upgrade
      - uninstall
    source:
      output: env_id
  - name: random_string
    type: string
    applyTo:
      - upgrade
      - uninstall
    source:
      output: random_string
  - name: environment_type
    description: "The type of environment to create. Sandbox is the default."
    type: string
    default: Sandbox

outputs:
  - name: env_id
    type: string
    applyTo:
      - install
      - upgrade
  - name: random_string
    type: string
    applyTo:
      - install
# The following values are consumed by the Azure Portal and turned into visual blades and UI elements.
custom:
  com.azure.creatuidef:
    blades:
      Credentials:
        displayOrder: 1
        label: Power Platform Credentials
      Parameters:
        displayOrder: 2
        label: App Parameters
    elements:
      - name: powerapp_env_name
        tooltip: "A name for the environment to be created."
        displayName: "Environment name"
        displayOrder: 1
        uitype: Microsoft.Common.TextBox
        bladename: Parameters
      - name: POWER_CLIENT_ID
        tooltip: A client id with permission to create resources in a tenant.
        displayName: Client ID
        displayOrder: 1
        uitype: Microsoft.Common.PasswordTextBox
        bladename: Credentials
      - name: deploymentTime
        hide: true
      - name: POWER_CLIENT_PASSWORD
        displayOrder: 2
        tooltip: A Power Platform SP password or secret for the client ID.
        displayName: Client secret
        bladename: Credentials
        uitype: Microsoft.Common.PasswordTextBox
      - name: POWER_TENANT_ID
        displayOrder: 3
        tooltip: A Power Platform tenant id for operational control.
        displayName: Tenant ID
        bladename: Credentials
        uitype: Microsoft.Common.PasswordTextBox
